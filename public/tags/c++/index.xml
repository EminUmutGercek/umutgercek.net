<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Homepage</title>
    <link>https://umutgercek.net/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>idk</copyright>
    <lastBuildDate>Mon, 01 Feb 2021 05:44:50 +0300</lastBuildDate>
    
	<atom:link href="https://umutgercek.net/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; Initializer List</title>
      <link>https://umutgercek.net/posts/c&#43;&#43;-initializer-list/</link>
      <pubDate>Mon, 01 Feb 2021 05:44:50 +0300</pubDate>
      
      <guid>https://umutgercek.net/posts/c&#43;&#43;-initializer-list/</guid>
      <description>What is Initializer List in C++ Initializer list is plain old array C initializations.
int foo[] = {1,2,3,4,5}; Or STL Container initializations.
std::vector&amp;lt;int&amp;gt; foo = {1,2,3,4,5}; Create Initializer List Constructor Need to incldue initializer_list.
#include &amp;lt;initializer_list&amp;gt; class Foo { vector&amp;lt;int&amp;gt; m_vec; public: Foo(const initializer_list&amp;lt;int&amp;gt; &amp;amp;v) { for (initializer_list&amp;lt;int&amp;gt;::iterator itr = v.begin(); itr != v.end(); itr++) m_vec.push_back(*itr); } } </description>
    </item>
    
  </channel>
</rss>